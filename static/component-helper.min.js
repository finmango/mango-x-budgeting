const EVENT_RELOAD="component-reload";class ComponentHelper{constructor(){this._form=null}static saveFormData(t,o=!1){const e=[].slice.call(t.querySelectorAll("input, select")),a=new URL(window.location.href);e.forEach((t=>a.searchParams.set(t.id,t.value))),o?window.location.href=a:window.history.pushState({},"",a)}static loadFormData(t){const o=new URL(window.location),e=[];o.searchParams.forEach(((o,a)=>{const r=t.querySelector(`#${a}`);r?r.value=o:e.push(a)})),window.history.replaceState({},"",o)}onLoad(t){return this._onload=t,(async()=>{const o=new URLSearchParams(window.location.search).get("symbol");if(o){const t=this._form.querySelector("#symbol");t?t.value=o:this._form.attach("input",{type:"hidden",id:"symbol",value:o})}[EVENT_RELOAD,"popstate"].forEach((o=>{window.addEventListener(o,(()=>{this._form&&ComponentHelper.loadFormData(this._form),t()}))}))})(),this}init(){this._form&&ComponentHelper.loadFormData(this._form),this._onload()}addFormData(t){this._form=t;return[].slice.call(t.querySelectorAll("input, select")).forEach((o=>{o.addEventListener("change",(()=>{ComponentHelper.saveFormData(t,o.dataset.refresh),window.dispatchEvent(new Event(EVENT_RELOAD))}))})),this}}